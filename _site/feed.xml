<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-01-17T13:07:41+01:00</updated><id>http://localhost:4000//</id><title type="html">Tian An WONG</title><subtitle>The webspace of Tian An Wong. Maths and other fun things!
</subtitle><entry><title type="html">Today in Data</title><link href="http://localhost:4000/data/2017/01/17/today-in-data.html" rel="alternate" type="text/html" title="Today in Data" /><published>2017-01-17T12:50:45+01:00</published><updated>2017-01-17T12:50:45+01:00</updated><id>http://localhost:4000/data/2017/01/17/today-in-data</id><content type="html" xml:base="http://localhost:4000/data/2017/01/17/today-in-data.html">&lt;p&gt;I’ve been meaning to write more meaningful commentary on this, but I haven’t gotten around to it, so let me just highlight these for now.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.propublica.org/article/breaking-the-black-box-what-facebook-knows-about-you&quot;&gt;Breaking the Black Box&lt;/a&gt; is an incredible 4-part series by ProPublica that explores hidden biases in algorithms. The themes they explore are (1) Facebook’s data collection, (2) prices varying according to zip code or operating system, (3) machine learning by A/B testing, and (4) AI systems that learn to be racist based on the inherent bias in the data given to them. The whole series is worth reading; they’re short and have little interactive toy examples at the end of each one.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.npr.org/sections/thetwo-way/2017/01/10/508363607/what-happened-when-dylann-roof-asked-google-for-information-about-race&quot;&gt;What Happened When Dylann Roof Asked Google For Information About Race?&lt;/a&gt; Basically a case study of (3) above, but with very real-life consequences. In particular, Roof writes the following in his ‘manifesto’:&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;But more importantly [the Trayvon Martin case] prompted me to type in the words “black on White crime” into Google, and I have never been the same since that day. The first website I came to was the Council of Conservative Citizens. There were pages upon pages of these brutal black on White murders.&lt;/p&gt;
    &lt;/blockquote&gt;

    &lt;p&gt;The NPR article goes on to examine how Google autocompletes “black on white” versus “white on white”, and other searches.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><summary type="html">I’ve been meaning to write more meaningful commentary on this, but I haven’t gotten around to it, so let me just highlight these for now.</summary></entry><entry><title type="html">Hello World!</title><link href="http://localhost:4000/update/2016/12/27/hello-world-copy.html" rel="alternate" type="text/html" title="Hello World!" /><published>2016-12-27T14:13:45+01:00</published><updated>2016-12-27T14:13:45+01:00</updated><id>http://localhost:4000/update/2016/12/27/hello-world%20copy</id><content type="html" xml:base="http://localhost:4000/update/2016/12/27/hello-world-copy.html">&lt;p&gt;This is a test post. Also a ‘hello world!’&lt;/p&gt;

&lt;p&gt;You’ll find I edited this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><summary type="html">This is a test post. Also a ‘hello world!’</summary></entry></feed>
